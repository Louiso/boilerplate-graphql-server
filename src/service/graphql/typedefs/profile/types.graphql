type Profile @entity {
  _id: ID! @id
  userIdLaborum: ID @column
  firstJob: Boolean @column
  photo: String @column
  nationality: String @column
  docNumber: String @column
  firstName: String! @column
  lastName: String! @column
  sex: String @column
  salaryExpectation: SalaryExpectation @column
  civilState: String @column
  birthDate: Date @column
  actualPosition: String @column
  aboutMe: String @column
  headline: String @column
  jobPosition: String @column
  emails: [ EmailsPhonesResponse! ]! @column
  phones: [ EmailsPhonesResponse! ]! @column
  websites: [ EmailsPhonesResponse! ]! @column
  location: String @column
  curriculum: Curriculum @column
  socialNetworks: [ SocialNetwork! ]! @column
  latlon: LatLon @column
  deparment: String @column
  province: String @column
  district: String @column
  education: [ Education! ]! @column
  especialization: [ Especialization! ]! @column
  competencies: [ String! ] @column
  knowledge: [ Knowledge! ]! @column
  experience: [ Experience! ]! @column
  createdAt: Date! @column
  status: String @column
  updatedAt: Date! @column
  video: String @column
  # logical delete
  deleted: Boolean! @column
  dni: String @column
  passport: String @column
  immigrationCard: String @column
  docType: String! @column
  idUser: String! @column
  referents: [Referents!] @column
  firstProfileSubmissionDate: Date @column
}

type Referents {
  _id: ID!
  companyName: String
  name: String
  phoneNumber: String
  experienceId: String
  position: String
}

type EmailsPhonesResponse {
  _id: ID!
  type: String
  value: String
  title: String
}

type SocialNetwork {
  _id: ID!
  socialNetwork: String
  url: String
}

type Location {
  geometry: JSON
  address: String
}

type Education {
  _id: ID!
  institutionName: String
  degree: String
  condition: String
  career: String
  academicArea: String
  startDate: Date
  endDate: Date
  studyingHere: Boolean
  description: String
  imgUrl: String
  idEducationLaborum: String
  level: String
}

type Curriculum {
  fileName: String
  filenameOriginal: String
  url: String
  updatedAt: String
}

type Experience {
  _id: ID!
  jobPosition: String
  companyName: String
  hierarchy: String
  area: String
  location: String
  startDate: Date
  endDate: Date
  description: String
  imgUrl: String
  workHere: Boolean
  idExperienceLaborum: String
}

type Especialization {
  _id: ID!
  especializationName: String
  especializationtype: String
  especializationPlace: String
  startDate: Date
  endDate: Date
  description: String
  imgUrl: String
  studyingHere: Boolean
  condition: String
}

type Knowledge {
  _id: ID!
  knowledgeName: String
  level: String
}

type LatLon {
  lat: String
  lng: String
}

type SalaryExpectation {
  _id: String
  currency: String
  amount: String
}

type Hierarchy {
  id: String
  name: String
}

type Area {
  id: String
  name: String
}

input KnowledgeInput {
  _id: ID!
  knowledgeName: String
  level: String
}

input WebsitesInput {
  _id: ID!
  type: String
  value: String
  title: String
}

input AdditionalInformationInput {
  websites: [ WebsitesInput! ]
  knowledge: [ KnowledgeInput! ]
}