enum CandidateTaskStatus {
  pending
  doing
  executed
  reviewed
}

type Section {
  isWildCard: Boolean
  needValidBeforeToRender: Boolean
  sectionCode: String
  hiddenWhileCurrentSectionIsIncomplete: Boolean
  completed: Boolean
  valid: Boolean
}

type TimezoneType {
  candidate: String
  responsable: String
}

type CandidateTask {
  _id: ID!
  taskId: ID!
  candidateId: ID!
  jobId: ID!
  stageId: ID!
  status: CandidateTaskStatus!
  executedAt: Date
  resultTaskId: String
  timezone: TimezoneType
  updateContentTask: Boolean
  taskDate: Date
  candidateInfo: CandidateInfoCreateTaskResult
  isIntroductionViewed: Boolean
  task: Task!
}

type CandidateInfoCreateTaskResult {
  candidateState: CandidateStatus
  email: String
  name: String
  firstName: String
  lastName: String
  phone: String
  docNumber: String
  age: String
  gender: String
}